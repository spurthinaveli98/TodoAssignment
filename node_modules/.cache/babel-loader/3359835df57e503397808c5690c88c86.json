{"ast":null,"code":"import _classCallCheck from \"/home/zadmin/react-project-basic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/zadmin/react-project-basic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/zadmin/react-project-basic/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/zadmin/react-project-basic/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/zadmin/react-project-basic/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/zadmin/react-project-basic/src/Components/InteractiveList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      maxWidth: 752\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper\n    },\n    title: {\n      margin: \"\".concat(theme.spacing.unit * 4, \"px 0 \").concat(theme.spacing.unit * 2, \"px\")\n    }\n  };\n};\n\nfunction generate(element) {\n  return [0, 1, 2].map(function (value) {\n    return React.cloneElement(element, {\n      key: value\n    });\n  });\n}\n\nvar InteractiveList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InteractiveList, _React$Component);\n\n  function InteractiveList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InteractiveList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InteractiveList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dense: false,\n      secondary: false\n    };\n    return _this;\n  }\n\n  _createClass(InteractiveList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          dense = _this$state.dense,\n          secondary = _this$state.secondary;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: dense,\n          onChange: function onChange(event) {\n            return _this2.setState({\n              dense: event.target.checked\n            });\n          },\n          value: \"dense\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }),\n        label: \"Enable dense\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: secondary,\n          onChange: function onChange(event) {\n            return _this2.setState({\n              secondary: event.target.checked\n            });\n          },\n          value: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }),\n        label: \"Enable secondary text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Text only\"), React.createElement(\"div\", {\n        className: classes.demo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: dense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, generate(React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"Single-line item\",\n        secondary: secondary ? 'Secondary text' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })))))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Icon with text\"), React.createElement(\"div\", {\n        className: classes.demo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: dense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, generate(React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(FolderIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Single-line item\",\n        secondary: secondary ? 'Secondary text' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))))))), React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Avatar with text\"), React.createElement(\"div\", {\n        className: classes.demo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: dense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, generate(React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(FolderIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"Single-line item\",\n        secondary: secondary ? 'Secondary text' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })))))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Avatar with text and icon\"), React.createElement(\"div\", {\n        className: classes.demo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: dense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, generate(React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(FolderIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"Single-line item\",\n        secondary: secondary ? 'Secondary text' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return InteractiveList;\n}(React.Component);\n\nInteractiveList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(InteractiveList);","map":{"version":3,"sources":["/home/zadmin/react-project-basic/src/Components/InteractiveList.js"],"names":["React","PropTypes","withStyles","List","ListItem","ListItemAvatar","ListItemIcon","ListItemSecondaryAction","ListItemText","Avatar","IconButton","FormGroup","FormControlLabel","Checkbox","Grid","Typography","FolderIcon","DeleteIcon","styles","theme","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","paper","title","margin","spacing","unit","generate","element","map","value","cloneElement","key","InteractiveList","state","dense","secondary","classes","props","event","setState","target","checked","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    margin: `${theme.spacing.unit * 4}px 0 ${theme.spacing.unit * 2}px`,\n  },\n});\n\nfunction generate(element) {\n  return [0, 1, 2].map(value =>\n    React.cloneElement(element, {\n      key: value,\n    }),\n  );\n}\n\nclass InteractiveList extends React.Component {\n  state = {\n    dense: false,\n    secondary: false,\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { dense, secondary } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={dense}\n                onChange={event => this.setState({ dense: event.target.checked })}\n                value=\"dense\"\n              />\n            }\n            label=\"Enable dense\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={secondary}\n                onChange={event => this.setState({ secondary: event.target.checked })}\n                value=\"secondary\"\n              />\n            }\n            label=\"Enable secondary text\"\n          />\n        </FormGroup>\n        <Grid container spacing={16}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Text only\n            </Typography>\n            <div className={classes.demo}>\n              <List dense={dense}>\n                {generate(\n                  <ListItem>\n                    <ListItemText\n                      primary=\"Single-line item\"\n                      secondary={secondary ? 'Secondary text' : null}\n                    />\n                  </ListItem>,\n                )}\n              </List>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Icon with text\n            </Typography>\n            <div className={classes.demo}>\n              <List dense={dense}>\n                {generate(\n                  <ListItem>\n                    <ListItemIcon>\n                      <FolderIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Single-line item\"\n                      secondary={secondary ? 'Secondary text' : null}\n                    />\n                  </ListItem>,\n                )}\n              </List>\n            </div>\n          </Grid>\n        </Grid>\n        <Grid container spacing={16}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Avatar with text\n            </Typography>\n            <div className={classes.demo}>\n              <List dense={dense}>\n                {generate(\n                  <ListItem>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <FolderIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary=\"Single-line item\"\n                      secondary={secondary ? 'Secondary text' : null}\n                    />\n                  </ListItem>,\n                )}\n              </List>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Avatar with text and icon\n            </Typography>\n            <div className={classes.demo}>\n              <List dense={dense}>\n                {generate(\n                  <ListItem>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <FolderIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary=\"Single-line item\"\n                      secondary={secondary ? 'Secondary text' : null}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton aria-label=\"Delete\">\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>,\n                )}\n              </List>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nInteractiveList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InteractiveList);\n"]},"metadata":{},"sourceType":"module"}